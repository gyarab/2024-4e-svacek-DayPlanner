package com.example.dayplanner.main.timeline;

import com.example.dayplanner.main.habits.Habit;
import com.example.dayplanner.main.tasks.Task;

public class TimelineItem {
    private boolean isTask;
    private Task task;
    private Habit habit;

    public TimelineItem(Task task) {
        this.isTask = true;
        this.task = task;
    }

    public TimelineItem(Habit habit) {
        this.isTask = false;
        this.habit = habit;
    }

    public boolean isTask() {
        return isTask;
    }

    public Task getTask() {
        return task;
    }

    public Habit getHabit() {
        return habit;
    }

    public String getTaskId() {
        return isTask && task != null ? task.getTaskId() : null;
    }

    public String getTaskTitle() {
        return isTask && task != null ? task.getTaskTitle() : null;
    }

    public String getTaskStartTime() {
        return isTask && task != null ? task.getTaskStartTime() : null;
    }

    public int getTaskDuration() {
        return isTask && task != null ? task.getTaskLength() : 0;
    }

    public String getTaskDescription() {
        return isTask && task != null ? task.getTaskDescription() : null;
    }

    public boolean isTaskCompleted() {
        return isTask && task != null ? task.isTaskCompleted() : null;
    }

    public void setTaskCompleted(boolean isCompleted) {
        if (isTask && task != null) {
            task.setTaskCompleted(isCompleted);
        }
    }
    public String getHabitName() {
        return !isTask && habit != null ? habit.getName() : null;
    }

    public String getHabitFrequency() {
        return !isTask && habit != null ? habit.getFrequency() : null;
    }

    public String getHabitDate() {
        if (habit != null && habit.getEntries() != null && !habit.getEntries().isEmpty()) {
            return habit.getEntries().values().iterator().next().getDate();
        }
        return "";
    }

    public void setStartTime(String newStartTime) {
        if (isTask && task != null) {
            task.setTaskStartTime(newStartTime);
        } else if (habit != null) {
            habit.setStartTime(newStartTime);
        }
    }


    public String toString() {
        /** toStringMethod generated by ChatGPT **/
        if (isTask) {
            return "Task: " + task.getTaskId() + " | " + task.getTaskTitle() + " | Description: " + task.getTaskDescription() +
                    " | Date: " + task.getTaskDate() +
                    " | Start: " + task.getTaskStartTime() + " | Duration: " + task.getTaskLength() + " min" + " | Completed: " + task.isTaskCompleted();
        } else if (habit != null) {
            return "Habit: " + habit.getId() + " | " + habit.getName() +
                    " | Frequency: " + habit.getFrequency() + " | Start: " + habit.getStartTime();
        }
        return "Unknown Timeline Item";
    }

    // Converts start time (14:35) to total minutes from midnight
    public int getStartTimeInMinutes() {
        String time = isTask ? getTaskStartTime() : (habit != null ? habit.getStartTime() : null);
        if (time == null || !time.contains(":")) return 0;
        String[] parts = time.split(":");
        try {
            return Integer.parseInt(parts[0]) * 60 + Integer.parseInt(parts[1]);
        } catch (NumberFormatException e) {
            return 0;
        }
    }

    public int getDurationInMinutes() {
        return getTaskDuration();
    }
}
